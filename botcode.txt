import math
import discord
import asyncio
import time
from random import randint
from discord.ext import tasks
from itertools import cycle
from better_profanity import profanity
from discord.ext import commands  # discord.ext.commands.bot.(method)
from discord.ext.commands import bot


# UTILITY FUNCTIONS AND EVENT REFERENCING
# Await = returns message back to server.
# @client.event = refers to the available documentation in discord.py
# -1 = refers to checking if there is something there

########################################################
# this section is outside the @client.event for the rpg game
##################################################


# prefix - is just a filler
client = commands.Bot(command_prefix="!")
# bot status list
game = cycle(["Witcher 3", "Diablo 3", "Gaben 3", "Overwatch", "The Walking Dead",
              "Minecraft", "Dishonored", "Grand Theft Auto V"])
########################################################################################
# For the statistics


def community_report(id):
    online = 0
    idle = 0
    offline = 0
    for t in id.members:
        if str(t.status) == "online":
            online += 1
        if str(t.status) == "offline":
            offline += 1
        if str(t.status) == "idle":
            idle += 1

    return online, idle, offline


########################################################################################
# connect command


#@bot.command()
#async def join(ctx):
#    channel = ctx.author.voice.channel
#    await channel.connect()

# disconnect

#@bot.command()
#async def leave(ctx):
 #   await ctx.voice_client.disconnect()


########################################################################################
@client.event
async def on_message(message):
    id = client.get_guild(194328514164555776)
    # Track who said what, in the channel,discord id, username, and message
    print(f"{message.channel}: {message.author}: {message.author.name.upper()}: {message.content}")
########################################################################################
    # ADVENTURE-RPG GAME-------Credits to https://opensource.com/article/19/7/get-modular-python-classes------

# -----------------------Section for enemy classes and fighting etc----------------------------
# THE START OF THE ADVENTURE :)))
    if message.content.startswith('!adventure'):
        class Enemy:
            # enemies ancestry to help generate a bot!
            def __init__(self, ancestry, gear):
                # troll, goblin, vulture
                self.enemy = ancestry
                # Great axe, Spiked club, Stabby sword
                self.weapon = gear
                # enemy health generated range 50-100
                self.hp = randint(50, 100)
                self.ac = randint(12, 30)
                self.alive = True

            async def fight(self, tgt):
                await message.channel.send("You take a swing at the " + self.enemy + ".")
                hit = randint(0, 50)
                # if the enemy is alive and accuracy is great enough, you can hit the enemy.
                if self.alive and hit > self.ac:
                    await message.channel.send("You hit the " + self.enemy + " for " + str(hit) + " damage!")
                    self.hp = self.hp - hit
                    await message.channel.send("The " + self.enemy + " has " + str(self.hp) + " HP remaining")
                else:
                    await message.channel.send("You missed.")

                if self.hp < 1:
                    self.alive = False
# ----------------------------------------------------end of section------------------------------------

        def strike(text):
            result = ''
            for striked in text:
                result = result + striked + '\u0336'
            return result

        await message.channel.send("```Select Class: Note:enter [number] to choose class]```")
        await message.channel.send("``` [1]Warrior (Good at defense and Attack) (Recommended)```")
        await message.channel.send(strike("``` [2]Heavy (High health, Low Damage) (Not Recommended) "
                                   "(In maintenance)```"))
        await message.channel.send(strike("``` [3]Wizard (High damage, Low health) (Not Recommended) "
                                   "(In maintenance)```"))
        await message.channel.send(strike("``` [4]Memer (Good at nothing, Bad at everythin"
                                   "g) (?) (In maintenance)```"))

        def is_correct(m):
            return m.author == message.author and m.content.isdigit()

        try:
            # 1st input
            operation = await client.wait_for('message', check=is_correct, timeout=15.0)
        except asyncio.TimeoutError:
            return await message.channel.send(f"```Sorry, {message.author.name}  you took too long!!-- You've been "
                                              f"decommissioned "
                                              "for being too slow. --Ask !adventure again from the start--```")
        # if operation is addition
        if operation.content == '1':
            await message.channel.send("```Warrior Selected.```", file=discord.File('warrior.JPG'))
            time.sleep(2)
            # 2nd input
            await message.channel.send(f"```Are you sure {message.author.name}? (yes[1]/no[0])```")
            first = await client.wait_for('message', check=is_correct)
            if first.content == "1":
                await message.channel.send("```Warrior Class Chosen.```")
                await message.channel.send("Warrior is a class that specializes in combat or warfare,"
                                           "they are very prideful fighters and are very righteous and deadly.")
                time.sleep(3)
                await message.channel.send("```Continue?(yes[1]/no[0])```")
                c = await client.wait_for('message', check=is_correct)
                if c.content == "1":
                    embed = discord.Embed(
                        title=f"```Warrior {message.author.name} has entered the battlefield.```",
                        description="Only the righteous prevail......",
                        colour=discord.Colour.red()
                    )
                    embed.set_image(
                        url='https://cdn.discordapp.com/attachments/586065195059773453/678363121525456958/warrior.JPG')
                    await message.channel.send(embed=embed)
                    time.sleep(2)
                    await message.channel.send("```Its been a long day of partying with the Fair maidens last night. "
                                               "Should i sleep[0]? or should i go outside and walk around[1]?```",
                                               file=discord.File('nightcastle.JPG'))
                    c = await client.wait_for('message', check=is_correct)
                    if c.content == '0':
                        await message.channel.send(f"```{message.author.name}  fell asleep and closed his eyes..```")
                        await message.channel.send("```.....Zzzzzzz..```")
                        time.sleep(1)
                        await message.channel.send("```.....Zzzzzzz.......Zzzzzzz..```")
                        time.sleep(1)
                        await message.channel.send("```.....Zzzzzzz.......Ugh*```")
                        time.sleep(2)
                        await message.channel.send("```*Something in the dark stabbed you```",
                                                   file=discord.File('assassin.JPG'))
                        time.sleep(1)
                        await message.channel.send("```You're bleeding out and die without anyone's notice.```",
                                                   file=discord.File('wardead.JPG'))
                        time.sleep(2)
                        await message.channel.send("```Game Over. Say !adventure to restart.```")

                    elif c.content == '1':
                        await message.channel.send("```...............```")
                        await message.channel.send("```...............```")
                        await message.channel.send("```...............```")
                        await message.channel.send("```...............```")
                        await message.channel.send("```An el-troll has appeared!!```", file=discord.File('troll.JPG'))
                        await message.channel.send("```You have two choices:\n[1]Beat it\n[2]examine the goblino```")
                        c = await client.wait_for('message', check=is_correct)
                        if c.content == "1":
                            # troll equipped with a great axe
                            foe = Enemy("troll", "great axe")
                            await message.channel.send(
                                "```You meet a ```" + foe.enemy + "``` wielding a ```" + foe.weapon)
                            await message.channel.send("[Enter 2] to auto attack the Goblin!")
                            d = await client.wait_for('message', check=is_correct)
                            r = True
                            if foe:
                                while r:
                                    if d.content == "2":
                                        await foe.fight(foe)
                                        if not foe.alive:
                                            await message.channel.send("```You have won...this time.```",
                                                                       file=discord.File('dedtroll.JPG'))
                                            await message.channel.send("```El Troll has been defeated!```")
                                            r = False
                                            await message.channel.send("```That was a tough fight!```")
                                            await message.channel.send("```What do you want to do now?```")
                                            await message.channel.send(strike("```[1]Go home```"))
                                            await message.channel.send(strike("```[2]Go play video games```"))
                                            await message.channel.send(strike("```[3]Watch sunrise```"))
                                            await message.channel.send(strike("```[4]Watch sunset```"))
                        else:
                            await message.channel.send("```Examining the troll........```")
                            await message.channel.send("```.Examining the troll......```")
                            await message.channel.send("```..Examining the troll......```")
                            await message.channel.send("```...Examining the troll.....```")
                            await message.channel.send(f"```The troll charged and infected {message.author.name} ! "
                                                       "You suddenly feel sick from"
                                                       " a virus. You feel ill and suddenly lose your remaining health."
                                                       "```",
                                                       file=discord.File('wardead.JPG'))
                            await message.channel.send(f"```{message.author.name} died from Poison... Better luck "
                                                       f"next time, "
                                                       "Say !adventure to restart. "
                                                       "```")
                else:
                    await message.channel.send("```You died at the selection menu. Say !adventure to restart. "
                                               "Say !adventure to restart```")
            else:
                await message.channel.send("```You died at the selection menu. Say !adventure to restart. "
                                           "Say !adventure to restart```")
        else:
            await message.channel.send("```You died at the selection menu. Say !adventure to restart```")


# END OF ADVENTURE
########################################################################################
# simple calculator
    if message.content.startswith('!calc'):
        await message.channel.send("```Select operation.(Maintenance Note: Does not take into account decimal input)\n"
                                   "1.Add\n2.Subtract\n3.Multiply\n4.Divide\n5.Powers\n"
                                   "6.Loge(x) Base 10\n7.loge(x) Base 2\n8.Square Root```")

        def is_correct(m):
            return m.author == message.author and m.content.isdigit()

        try:
            # 1st input
            operation = await client.wait_for('message', check=is_correct, timeout=8.0)
        except asyncio.TimeoutError:
            return await message.channel.send("```Sorry, you took too long!! --Ask again from the start--```")
        # if operation is addition
        if operation.content == '1':
            await message.channel.send("```You chose addition!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)
            # 3rd input
            await message.channel.send("```Second Number: ```")
            second = await client.wait_for('message', check=is_correct)
            await message.channel.send("```Calculated output: ```")
            await message.channel.send(float(first.content) + float(second.content))
            await message.channel.send("```👍 ```")

        if operation.content == '2':
            await message.channel.send("```You chose Subtraction!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)
            # 3rd input
            await message.channel.send("```Second Number: ```")
            second = await client.wait_for('message', check=is_correct)
            await message.channel.send("```Calculated output: ```")
            await message.channel.send(float(first.content) * float(second.content))
            await message.channel.send("```👍 ```")

        if operation.content == '3':
            await message.channel.send("```You chose Multiplication!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)
            # 3rd input
            await message.channel.send("```Second Number: ```")
            second = await client.wait_for('message', check=is_correct)
            await message.channel.send("```Calculated output: ```")
            await message.channel.send(float(first.content) * float(second.content))
            await message.channel.send("```👍 ```")

        if operation.content == '4':
            await message.channel.send("```You chose Division!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)
            # 3rd input
            await message.channel.send("```Second Number: ```")
            second = await client.wait_for('message', check=is_correct)
            await message.channel.send("```Calculated output: ```")
            await message.channel.send(float(first.content)/float(second.content))
            await message.channel.send("```👍 ```")

        if operation.content == '5':
            await message.channel.send("```You chose Powers!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)
            # 3rd input
            await message.channel.send("```Second Number: ```")
            second = await client.wait_for('message', check=is_correct)
            await message.channel.send("```Calculated output: ```")
            await message.channel.send(float(first.content)**float(second.content))
            await message.channel.send("```👍 ```")

        if operation.content == '6':
            await message.channel.send("```You chose Loge(x) Base 10!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)

            await message.channel.send("```Calculated output: ```")
            await message.channel.send(math.log10(int(first.content)))
            await message.channel.send("```👍 ```")

        if operation.content == '7':
            await message.channel.send("```You chose log Base 2!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)

            await message.channel.send("```Calculated output: ```")
            await message.channel.send(math.log2(int(first.content)))
            await message.channel.send("```👍 ```")

        if operation.content == '8':
            await message.channel.send("```Square Root!```")
            # 2nd input
            await message.channel.send("```First Number: ```")
            first = await client.wait_for('message', check=is_correct)

            await message.channel.send("```Calculated output: ```")
            await message.channel.send(math.sqrt(int(first.content)))
            await message.channel.send("```👍 ```")

    ########################################################################################

    # guessing game
    if message.content.startswith('!guess'):
        await message.channel.send('Guess a number between 1 and 10.')

        def is_correct(m):
            return m.author == message.author and m.content.isdigit()

        answer = randint(1, 10)

        try:
            guess = await client.wait_for('message', check=is_correct, timeout=5.0)
        except asyncio.TimeoutError:
            return await message.channel.send('Sorry, you took too long it was {}.'.format(answer))

        if int(guess.content) == answer:

            embed = discord.Embed(
                title='Nice!',
                description="You got the lucky 10%",
                colour=discord.Colour.blue()
            )
            embed.set_image(
                url='https://cdn.discordapp.com/attachments/586065195059773453/678825156461723668/congrats.JPG')
            await message.channel.send(embed=embed)
        else:
            embed = discord.Embed(
                title='Oops. It is actually {}.'.format(answer),
                description="Better luck next time!",
                colour=discord.Colour.blue()
            )
            embed.set_image(
                url='https://cdn.discordapp.com/attachments/586065195059773453/678825130989846556/badluck.JPG')
            await message.channel.send(embed=embed)

    ########################################################################################
    # Tracking stats
    if message.content.find("!track") != -1:
        online, idle, offline = community_report(id)
        await message.channel.send(f"```Online: {online}.\nIdle/busy/dnd: {idle}.\nOffline: {offline}\n"
                                   f"Member Count: {id.member_count}```")
    ########################################################################################
    # return number of users.
    if message.content.find("!users") != -1:
        await message.channel.send(client.users)
    ########################################################################################
    # block the bad words
    bad_words = open("swearWords.txt", "r")
    if __name__ == "__main__":
        profanity.load_censor_words()
        msg = message.content
        if profanity.contains_profanity(msg):
            output = profanity.censor(msg)
            embed = discord.Embed(
                title='---Profanity Detected---\n',
                description=f"Please Be Nice {message.author.name.upper()}",
                colour=discord.Colour.blue()
            )
            await message.channel.send(embed=embed)
            await message.channel.send(output)
    ########################################################################################
    # Jason's Lovely Quotes
    if message.content.find("!jason") != -1:
        phrases = ["We're refugees", "I love getting my name on stuff", "I miss being myself. Myself was the best",
                   "You got a dope soul and hella ethics.", "Claustrophobic? Who would ever be scared of "
                   "Santa Claus? Oh! The Jewish.","I love getting my name on stuff. In Jacksonville, I got a "
                   "flu virus named after me 'cause I kissed a bat on a dare", "I wasn't a failed DJ, I was "
                   "pre-successful", "I have no idea what's going on, but everyone is talking and I should, too"]

        # Randomly prints out quotes from jason(the good place)
        index = randint(0, 7)
        embed = discord.Embed(
            title='Hi, My names Jason',
            description=f"{phrases[index]}",
            colour=discord.Colour.red()
        )
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/586065195059773453/677323541162623007/jason.JPG'
        )
        await message.channel.send(embed=embed)
    ########################################################################################
    elif message.content.find("!lunch") != -1:
        embed = discord.Embed(
            title='I Want to eat lunch if you know what I mean',
            description="......................",
            colour=discord.Colour.blue()
        )
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/676221317053284374/676933610175070208/tobylunch.jpg')
        await message.channel.send(embed=embed)

    elif message.content.find("!int") != -1:
        embed = discord.Embed(
            title='Is it time to troll? ',
            description="ITS TIME TO RUN IT DOWN MID",
            colour=discord.Colour.red()
        )
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/586065195059773453/677321682549211146/int.JPG')
        await message.channel.send(content=None, embed=embed)

    elif message.content.find("!single") != -1:
        embed = discord.Embed(
            title='Happy Valentines Guys!',
            description="Our true love, is our love for one another ;)",
            colour=discord.Colour.red()
        )
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/586065195059773453/677332007046348840/Single.JPG')
        await message.channel.send(content=None, embed=embed)

    elif message.content.find("!christmas") != -1:
        embed = discord.Embed(
            title='Merry Christmas!',
            description="Don't get on santa's Naughty list!",
            colour=discord.Colour.red()
        )
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/586065195059773453/677336615739326474/christmas.JPG')
        await message.channel.send(content=None, embed=embed)

    elif message.content == "!help":
        embed = discord.Embed(title="Bot Commands *Updated*", description="Some useful commands updated"
                                                                          " as of 2/15/2020")
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/586065195059773453/677327250823184405/Help.JPG')
        embed.add_field(name="!jason", value="Say Jason to Jason. He is outfitted with several quotes")
        embed.add_field(name="!users", value="Extra Information for development purposes")
        embed.add_field(name="!int", value="Troll")
        embed.add_field(name="!lunch", value="Im Hungry")
        embed.add_field(name="!single", value="Happy Valentines day")
        embed.add_field(name="!christmas", value="Merry Christmas")
        embed.add_field(name="!track", value= "Tracks no. of users, online, offline, idle and total member count.")
        embed.add_field(name="!nichowo", value="Eek bon chee ko pa na green. (I'll put a price on your head so big...)")
        embed.add_field(name="!femjuan", value="*In maintenance")
        embed.add_field(name="!alando", value="Why you slimy, double-crossing, no-good swindler!(In maintenance)")
        embed.add_field(name="!tobyjewalker", value="You want the impossible(In maintenance)")
        embed.add_field(name="!guess", value="Try to guess what number jason is thinking of between 1 and 10.")
        embed.add_field(name="!calc", value="Calculate basic functions")
        embed.add_field(name="!adventure", value="strange concept that introduces choices, class choosing and "
                                                 "adventure!")
        await message.channel.send(content=None, embed=embed)

    elif message.content.find("!nichowo") != -1:
        embed = discord.Embed(
            title=' Ah! Dada Nanichimo ooneetah!(Do that again)',
            description="Ya ma da poonoo.(Its bad for business)",
            colour=discord.Colour.red()
        )
        embed.set_image(
            url='https://cdn.discordapp.com/attachments/586065195059773453/677320836386127902/unknown.png')
        await message.channel.send(embed=embed)

    elif message.author == client.user:
        return
########################################################################################

# welcomes the user


@client.event
async def on_member_join(member):
    for channel in member.guild.channels:
        # We check to make sure we are sending the message in the general channel
        if str(channel) == "general":
            await channel.send_message(f"Welcome To The Asian Invasion {member.mention}")
########################################################################################

# Loops the bots status


@tasks.loop(seconds=5)
async def bot_status_change():
    await client.change_presence(activity=discord.Game(next(game)))

# Checks to see if bot is ready

########################################################################################


@client.event  # Event decorator/wrapper
async def on_ready():
    bot_status_change.start()
    # indicator to check if the code has reached this point
    print("Im ready")
    # 0 is a placeholder for client(whatever is in var client)
    # .user represents the user....
    # so client.user
    print(f'We have logged in as {client.user}')
########################################################################################
client.run('Njc1NjM1NzI1MDg5MTEyMDk4.XkIu1g.As3uPO68TGLWdssbGSXf0WzvkE8')
